# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

env:
  NODE_VERSION: '20.x'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: npm install, build, and test
        run: |
          # Build and test the project
          npm install --legacy-peer-deps
          npm run build --if-present
          npm run test --if-present

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: ${{ secrets.SSH_CONFIG }}

      # - name: check rsync version
      #   run: rsync --version

      # Production deployments:
      - name: rsync over ssh
        run: |
          rsync -av --delete \
            --exclude vendor/ \
            --exclude api/ \
            --exclude files/ \
            --exclude api-dev/ \
            --exclude .env \
            --exclude token.json \
            ./dist/ preflight:/opt/bitnami/apps/preflight/htdocs/

      - name: rsync the api
        run: |
          rsync -av --delete \
            --exclude qb/ \
            --exclude vendor/ \
            --exclude google-api-php-client-2.5.0/ \
            --exclude .env \
            --exclude token.json \
            ./api/ preflight:/opt/bitnami/apps/preflight/htdocs/api/
